# Generated by Django 2.2 on 2023-05-04 21:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import resource_inventory.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CloudInitFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('priority', models.IntegerField()),
                ('generated', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('architecture', models.CharField(choices=[('x86_64', 'x86_64'), ('aarch64', 'aarch64'), ('unknown', 'unknown')], max_length=50)),
                ('lab_id', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('public', models.BooleanField(default=True)),
                ('description', models.TextField()),
                ('available', models.BooleanField(default=True)),
                ('obsolete', models.BooleanField(default=False)),
                ('from_lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Lab')),
            ],
        ),
        migrations.CreateModel(
            name='Installer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Interface',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('mac_address', models.CharField(max_length=17)),
                ('bus_address', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('is_public', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='NetworkRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource_inventory.Network')),
            ],
        ),
        migrations.CreateModel(
            name='OPNFVConfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default='', max_length=300)),
                ('description', models.CharField(blank=True, default='', max_length=600)),
                ('installer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource_inventory.Installer')),
                ('networks', models.ManyToManyField(to='resource_inventory.NetworkRole')),
            ],
        ),
        migrations.CreateModel(
            name='OPNFVRole',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PhysicalNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vlan_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='RemoteInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=15)),
                ('mac_address', models.CharField(max_length=17)),
                ('password', models.CharField(max_length=100)),
                ('user', models.CharField(max_length=100)),
                ('management_type', models.CharField(default='ipmi', max_length=50)),
                ('versions', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceBundle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceConfiguration',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_head_node', models.BooleanField(default=False)),
                ('name', models.CharField(default='opnfv_host', max_length=3000)),
                ('cloud_init_files', models.ManyToManyField(blank=True, to='resource_inventory.CloudInitFile')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='resource_inventory.Image')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('architecture', models.CharField(choices=[('x86_64', 'x86_64'), ('aarch64', 'aarch64')], max_length=50)),
                ('description', models.TextField()),
                ('labs', models.ManyToManyField(related_name='resourceprofiles', to='account.Lab')),
            ],
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Vlan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('vlan_id', models.IntegerField()),
                ('tagged', models.BooleanField()),
                ('public', models.BooleanField(default=False)),
                ('network', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='resource_inventory.PhysicalNetwork')),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('working', models.BooleanField(default=True)),
                ('vendor', models.CharField(default='unknown', max_length=100)),
                ('model', models.CharField(default='unknown', max_length=150)),
                ('labid', models.CharField(default='default_id', max_length=200, unique=True)),
                ('booked', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('bundle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='resource_inventory.ResourceBundle')),
                ('config', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='resource_inventory.ResourceConfiguration')),
                ('interfaces', models.ManyToManyField(to='resource_inventory.Interface')),
                ('lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Lab')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource_inventory.ResourceProfile')),
                ('remote_management', models.ForeignKey(default=resource_inventory.models.get_default_remote_info, on_delete=models.SET(resource_inventory.models.get_default_remote_info), to='resource_inventory.RemoteInfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceTemplate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=300)),
                ('xml', models.TextField()),
                ('description', models.CharField(default='', max_length=1000)),
                ('public', models.BooleanField(default=False)),
                ('temporary', models.BooleanField(default=False)),
                ('private_vlan_pool', models.TextField(default='')),
                ('public_vlan_pool', models.TextField(default='')),
                ('copy_of', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='resource_inventory.ResourceTemplate')),
                ('lab', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcetemplates', to='account.Lab')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceOPNFVConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opnfv_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_opnfv_config', to='resource_inventory.OPNFVConfig')),
                ('resource_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_opnfv_config', to='resource_inventory.ResourceConfiguration')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_opnfv_configs', to='resource_inventory.OPNFVRole')),
            ],
        ),
        migrations.AddField(
            model_name='resourceconfiguration',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource_inventory.ResourceProfile'),
        ),
        migrations.AddField(
            model_name='resourceconfiguration',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resourceConfigurations', to='resource_inventory.ResourceTemplate'),
        ),
        migrations.AddField(
            model_name='resourcebundle',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='resource_inventory.ResourceTemplate'),
        ),
        migrations.CreateModel(
            name='RamProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.IntegerField()),
                ('channels', models.IntegerField()),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ramprofile', to='resource_inventory.ResourceProfile')),
            ],
        ),
        migrations.AddField(
            model_name='physicalnetwork',
            name='bundle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='resource_inventory.ResourceBundle'),
        ),
        migrations.AddField(
            model_name='physicalnetwork',
            name='generic_network',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource_inventory.Network'),
        ),
        migrations.CreateModel(
            name='Opsys',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('lab_id', models.CharField(max_length=100)),
                ('obsolete', models.BooleanField(default=False)),
                ('available', models.BooleanField(default=True)),
                ('from_lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Lab')),
            ],
        ),
        migrations.AddField(
            model_name='opnfvconfig',
            name='scenario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource_inventory.Scenario'),
        ),
        migrations.AddField(
            model_name='opnfvconfig',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opnfv_config', to='resource_inventory.ResourceTemplate'),
        ),
        migrations.CreateModel(
            name='NetworkConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vlan_is_tagged', models.BooleanField()),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource_inventory.Network')),
            ],
        ),
        migrations.AddField(
            model_name='network',
            name='bundle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='networks', to='resource_inventory.ResourceTemplate'),
        ),
        migrations.CreateModel(
            name='InterfaceProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('speed', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('nic_type', models.CharField(choices=[('onboard', 'onboard'), ('pcie', 'pcie')], default='onboard', max_length=50)),
                ('order', models.IntegerField(default=-1)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interfaceprofile', to='resource_inventory.ResourceProfile')),
            ],
        ),
        migrations.CreateModel(
            name='InterfaceConfiguration',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('connections', models.ManyToManyField(blank=True, to='resource_inventory.NetworkConnection')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource_inventory.InterfaceProfile')),
                ('resource_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interface_configs', to='resource_inventory.ResourceConfiguration')),
            ],
        ),
        migrations.AddField(
            model_name='interface',
            name='acts_as',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='resource_inventory.InterfaceConfiguration'),
        ),
        migrations.AddField(
            model_name='interface',
            name='config',
            field=models.ManyToManyField(to='resource_inventory.Vlan'),
        ),
        migrations.AddField(
            model_name='interface',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource_inventory.InterfaceProfile'),
        ),
        migrations.AddField(
            model_name='installer',
            name='sup_scenarios',
            field=models.ManyToManyField(blank=True, to='resource_inventory.Scenario'),
        ),
        migrations.AddField(
            model_name='image',
            name='os',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='resource_inventory.Opsys'),
        ),
        migrations.AddField(
            model_name='image',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DiskProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('size', models.IntegerField()),
                ('media_type', models.CharField(choices=[('SSD', 'SSD'), ('HDD', 'HDD')], max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('rotation', models.IntegerField(default=0)),
                ('interface', models.CharField(choices=[('sata', 'sata'), ('sas', 'sas'), ('ssd', 'ssd'), ('nvme', 'nvme'), ('scsi', 'scsi'), ('iscsi', 'iscsi')], default='sata', max_length=50)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storageprofile', to='resource_inventory.ResourceProfile')),
            ],
        ),
        migrations.CreateModel(
            name='CpuProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cores', models.IntegerField()),
                ('architecture', models.CharField(choices=[('x86_64', 'x86_64'), ('aarch64', 'aarch64')], max_length=50)),
                ('cpus', models.IntegerField()),
                ('cflags', models.TextField(blank=True, null=True)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cpuprofile', to='resource_inventory.ResourceProfile')),
            ],
        ),
    ]
