# Generated by Django 2.2 on 2023-05-04 21:05

import api.models
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('resource_inventory', '0001_initial'),
        ('booking', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActiveUsersConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BridgeConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interfaces', models.ManyToManyField(to='resource_inventory.Interface')),
                ('opnfv_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource_inventory.OPNFVConfig')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=0)),
                ('complete', models.BooleanField(default=False)),
                ('job_type', models.CharField(choices=[('BOOK', 'Booking'), ('DATA', 'Analytics')], default='BOOK', max_length=4)),
                ('booking', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='booking.Booking')),
            ],
        ),
        migrations.CreateModel(
            name='TaskConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.IntegerField(default=0)),
                ('delta_keys_list', models.CharField(default='[]', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='AccessConfig',
            fields=[
                ('taskconfig_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.TaskConfig')),
                ('access_type', models.CharField(max_length=50)),
                ('revoke', models.BooleanField(default=False)),
                ('context', models.TextField(default='')),
                ('delta', models.TextField(default='{}')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('api.taskconfig',),
        ),
        migrations.CreateModel(
            name='HardwareConfig',
            fields=[
                ('taskconfig_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.TaskConfig')),
                ('image', models.CharField(default='defimage', max_length=100)),
                ('power', models.CharField(default='off', max_length=100)),
                ('hostname', models.CharField(default='hostname', max_length=100)),
                ('ipmi_create', models.BooleanField(default=False)),
                ('delta', models.TextField()),
            ],
            bases=('api.taskconfig',),
        ),
        migrations.CreateModel(
            name='SnapshotConfig',
            fields=[
                ('taskconfig_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.TaskConfig')),
                ('resource_id', models.CharField(default='default_id', max_length=200)),
                ('image', models.CharField(max_length=200, null=True)),
                ('dashboard_id', models.IntegerField()),
                ('delta', models.TextField(default='{}')),
            ],
            bases=('api.taskconfig',),
        ),
        migrations.CreateModel(
            name='SoftwareConfig',
            fields=[
                ('taskconfig_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.TaskConfig')),
            ],
            bases=('api.taskconfig',),
        ),
        migrations.CreateModel(
            name='OpnfvApiConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installer', models.CharField(max_length=200)),
                ('scenario', models.CharField(max_length=300)),
                ('pdf', models.CharField(max_length=100)),
                ('idf', models.CharField(max_length=100)),
                ('delta', models.TextField()),
                ('bridge_config', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.BridgeConfig')),
                ('opnfv_config', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='resource_inventory.OPNFVConfig')),
                ('roles', models.ManyToManyField(to='resource_inventory.ResourceOPNFVConfig')),
            ],
        ),
        migrations.CreateModel(
            name='GeneratedCloudConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_id', models.CharField(max_length=200)),
                ('text', models.TextField(blank=True, null=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Booking')),
                ('rconfig', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource_inventory.ResourceConfiguration')),
            ],
        ),
        migrations.CreateModel(
            name='APILog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('call_time', models.DateTimeField(auto_now=True)),
                ('method', models.CharField(max_length=6, null=True)),
                ('endpoint', models.CharField(max_length=300, null=True)),
                ('ip_addr', models.GenericIPAddressField(null=True)),
                ('body', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActiveUsersRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=0)),
                ('task_id', models.CharField(default=api.models.get_task_uuid, max_length=37)),
                ('lab_token', models.CharField(default='null', max_length=50)),
                ('message', models.TextField(default='')),
                ('config', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.ActiveUsersConfig')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Job')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SoftwareRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=0)),
                ('task_id', models.CharField(default=api.models.get_task_uuid, max_length=37)),
                ('lab_token', models.CharField(default='null', max_length=50)),
                ('message', models.TextField(default='')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Job')),
                ('config', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.SoftwareConfig')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='softwareconfig',
            name='opnfv',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.OpnfvApiConfig'),
        ),
        migrations.CreateModel(
            name='SnapshotRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=0)),
                ('task_id', models.CharField(default=api.models.get_task_uuid, max_length=37)),
                ('lab_token', models.CharField(default='null', max_length=50)),
                ('message', models.TextField(default='')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Job')),
                ('snapshot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource_inventory.Image')),
                ('config', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.SnapshotConfig')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NetworkConfig',
            fields=[
                ('taskconfig_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.TaskConfig')),
                ('delta', models.TextField()),
                ('interfaces', models.ManyToManyField(to='resource_inventory.Interface')),
            ],
            bases=('api.taskconfig',),
        ),
        migrations.CreateModel(
            name='HostNetworkRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=0)),
                ('task_id', models.CharField(default=api.models.get_task_uuid, max_length=37)),
                ('lab_token', models.CharField(default='null', max_length=50)),
                ('message', models.TextField(default='')),
                ('resource_id', models.CharField(default='default_id', max_length=200)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Job')),
                ('config', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.NetworkConfig')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HostHardwareRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=0)),
                ('task_id', models.CharField(default=api.models.get_task_uuid, max_length=37)),
                ('lab_token', models.CharField(default='null', max_length=50)),
                ('message', models.TextField(default='')),
                ('resource_id', models.CharField(default='default_id', max_length=200)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Job')),
                ('config', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.HardwareConfig')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccessRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=0)),
                ('task_id', models.CharField(default=api.models.get_task_uuid, max_length=37)),
                ('lab_token', models.CharField(default='null', max_length=50)),
                ('message', models.TextField(default='')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Job')),
                ('config', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.AccessConfig')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
